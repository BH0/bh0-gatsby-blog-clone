webpackJsonp([0xc0d421544639],{361:function(n,s){n.exports={data:{markdownRemark:{html:'<hr>\n<p>path: "/actionscript-flappy-bird-clone"\ntitle: "ActionScript Flappy BIrd Clone"\npublished: true\ndate: "14-07-2018" </p>\n<hr>\n<p>Hello, in this tutorial we will learn how to clone the popular mobile game "Flappy Bird" using ActionScript [3] - also known as Flash (Flash is the runtime that the language ActionScript runs within).  </p>\n<!-- more --> \n<p>This is a beginner friendly tutorial - assuming you have basic programming knowledge (data types, variables, for loops, if statements and functions/methods), Prior knowledge of ActionScript will help, otherwise prior knowledge of Javascript and/or Java since ActionScript is heavily influenced by these languages. I will produce a tutorial for getting started with Flash Development soon, but as an IDE you can use Adobe\'s FlashBuilder (I believe a trial version is available), or FlashDevelop (entirely free - and is what I use). </p>\n<h1>The Starting Point</h1>\n<p>First, make sure you have a public class that extends "Sprite". And initialize then defined the following variables, and input the methods (functions) like I have done so in the code snippet below. </p>\n<div class="gatsby-highlight" data-language="java">\n      <pre class="language-java"><code class="language-java"><span class="token keyword">package</span>\n<span class="token punctuation">{</span>\n    <span class="token keyword">import</span> flash<span class="token punctuation">.</span>display<span class="token punctuation">.</span>Sprite<span class="token punctuation">;</span>\n    <span class="token keyword">import</span> flash<span class="token punctuation">.</span>events<span class="token punctuation">.</span>Event<span class="token punctuation">;</span>\n    <span class="token keyword">import</span> flash<span class="token punctuation">.</span>display<span class="token punctuation">.</span>Shape<span class="token punctuation">;</span>\n    <span class="token keyword">import</span> flash<span class="token punctuation">.</span>events<span class="token punctuation">.</span>KeyboardEvent<span class="token punctuation">;</span>\n    <span class="token keyword">import</span> flash<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>setInterval<span class="token punctuation">;</span>\n    <span class="token keyword">import</span> flash<span class="token punctuation">.</span>text<span class="token punctuation">.</span>TextField<span class="token punctuation">;</span>\n    <span class="token keyword">import</span> flash<span class="token punctuation">.</span>text<span class="token punctuation">.</span>TextFormat<span class="token punctuation">;</span>\n   \n    <span class="token comment">/**\n     * //// Flappy Bird [Clone] (ActionScript/Flash)\n     * @author bh0\n     */</span>\n    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token keyword">extends</span> <span class="token class-name">Sprite</span>\n    <span class="token punctuation">{</span>\n        <span class="token comment">/// Player aka Bird</span>\n        <span class="token keyword">public</span> var playerSpeed<span class="token operator">:</span><span class="token keyword">int</span><span class="token punctuation">;</span>\n        <span class="token keyword">public</span> var playerGravity<span class="token operator">:</span>Number<span class="token punctuation">;</span>\n        <span class="token keyword">public</span> var playerVelocity<span class="token operator">:</span>Number<span class="token punctuation">;</span>\n        <span class="token keyword">public</span> var playerThrust<span class="token operator">:</span><span class="token keyword">int</span><span class="token punctuation">;</span>\n        <span class="token keyword">public</span> var score<span class="token operator">:</span><span class="token keyword">int</span><span class="token punctuation">;</span>\n        <span class="token keyword">public</span> var scoreText<span class="token operator">:</span>TextField<span class="token punctuation">;</span>\n       \n        <span class="token keyword">public</span> var bird<span class="token operator">:</span>Shape<span class="token punctuation">;</span>\n        <span class="token keyword">public</span> var pipe1<span class="token operator">:</span>Shape<span class="token punctuation">;</span>\n        <span class="token keyword">public</span> var pipe2<span class="token operator">:</span>Shape<span class="token punctuation">;</span>\n \n        <span class="token keyword">public</span> function <span class="token function">Main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token punctuation">{</span>\n            playerSpeed <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token comment">// player aka bird</span>\n            playerGravity <span class="token operator">=</span> <span class="token number">0.6</span><span class="token punctuation">;</span> <span class="token comment">// 0.6</span>\n            playerVelocity <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n            playerThrust <span class="token operator">=</span> <span class="token number">25</span><span class="token punctuation">;</span> <span class="token comment">// 20 15  </span>\n            score <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>stage<span class="token punctuation">)</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">else</span> <span class="token function">addEventListener</span><span class="token punctuation">(</span>Event<span class="token punctuation">.</span>ADDED_TO_STAGE<span class="token punctuation">,</span> init<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n       \n        <span class="token keyword">private</span> function <span class="token function">init</span><span class="token punctuation">(</span>e<span class="token operator">:</span>Event <span class="token operator">=</span> null<span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">void</span>\n        <span class="token punctuation">{</span>\n            <span class="token function">removeEventListener</span><span class="token punctuation">(</span>Event<span class="token punctuation">.</span>ADDED_TO_STAGE<span class="token punctuation">,</span> init<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token comment">// entry point</span>\n           \n            <span class="token comment">/// Draw Objects</span>\n \n           <span class="token comment">/// Enter Game Loop</span>\n        <span class="token punctuation">}</span>\n       \n        <span class="token keyword">public</span> function <span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">void</span> <span class="token punctuation">{</span>\n            <span class="token comment">/// Set (And Update) Score</span>\n               \n            <span class="token comment">/// Handle Bird\'s / Player\'s Positiong</span>\n \n            <span class="token comment">/// Move Pipes</span>\n           \n            <span class="token comment">/// Player Successfully Avoided Pipes</span>\n           \n            <span class="token comment">/// Collision Detection</span>\n        <span class="token punctuation">}</span>\n       \n        <span class="token comment">/// Movement</span>\n        <span class="token keyword">public</span> function <span class="token function">move</span><span class="token punctuation">(</span>e<span class="token operator">:</span>KeyboardEvent<span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">void</span> <span class="token punctuation">{</span>\n\n        <span class="token punctuation">}</span>\n        <span class="token keyword">public</span> function <span class="token function">draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">void</span> <span class="token punctuation">{</span>                       \n            <span class="token comment">/// Bird</span>\n           \n            <span class="token comment">/// Score</span>\n           \n            <span class="token comment">/// Pipe/s (Pipe1 &amp; Pipe2)</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>  \n<span class="token punctuation">}</span> </code></pre>\n      </div>\n<h1>Drawing Our Shapes</h1>\n<p>Inside our draw method, we draw two rectangles (the pipes) and a square (the bird), After our shapes are drawn, we add them to the "stage" (game-world) using the addChild function, notice that the colours are hexadecimal. </p>\n<div class="gatsby-highlight" data-language="java">\n      <pre class="language-java"><code class="language-java">        <span class="token keyword">public</span> function <span class="token function">draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">void</span> <span class="token punctuation">{</span>\n            <span class="token comment">/// Bird</span>\n            bird <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Shape</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            bird<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span><span class="token function">beginFill</span><span class="token punctuation">(</span><span class="token number">0X00FFFF00</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            bird<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span><span class="token function">drawRect</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            bird<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span><span class="token function">endFill</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token function">addChild</span><span class="token punctuation">(</span>bird<span class="token punctuation">)</span><span class="token punctuation">;</span>\n           \n            <span class="token comment">/// Score</span>\n            <span class="token comment">// var scoreTextFormat:TextFormat = new TextFormat();</span>\n            <span class="token comment">// scoreTextFormat.size = 130;</span>\n            scoreText <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TextField</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token comment">// scoreText.setTextFormat(scoreTextFormat);</span>\n            scoreText<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">400</span><span class="token punctuation">;</span>\n            scoreText<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span>\n            scoreText<span class="token punctuation">.</span>textColor <span class="token operator">=</span> <span class="token number">0X003E7091</span><span class="token punctuation">;</span>\n            <span class="token function">addChild</span><span class="token punctuation">(</span>scoreText<span class="token punctuation">)</span><span class="token punctuation">;</span>\n           \n            <span class="token comment">/// Pipe/s (Pipe1 &amp; Pipe2)</span>\n            pipe1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Shape</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            pipe1<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span><span class="token function">beginFill</span><span class="token punctuation">(</span><span class="token number">0X00FF00</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            pipe1<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span><span class="token function">drawRect</span><span class="token punctuation">(</span><span class="token number">600</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">160</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// h: 100, y: 200 or 170</span>\n            pipe1<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span><span class="token function">endFill</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token function">addChild</span><span class="token punctuation">(</span>pipe1<span class="token punctuation">)</span><span class="token punctuation">;</span>           \n \n            pipe2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Shape</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// these had to become independant for collision to work</span>\n            pipe2<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span><span class="token function">beginFill</span><span class="token punctuation">(</span><span class="token number">0X00FF00</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            pipe2<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span><span class="token function">drawRect</span><span class="token punctuation">(</span><span class="token number">600</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">160</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// h: 100, y: 200 or 170</span>\n            pipe2<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span><span class="token function">endFill</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token function">addChild</span><span class="token punctuation">(</span>pipe2<span class="token punctuation">)</span><span class="token punctuation">;</span>           \n<span class="token punctuation">}</span> </code></pre>\n      </div>\n<p>Then we call our draw function. method (which is only done once) inside the initialization ("init") method, </p>\n<div class="gatsby-highlight" data-language="java">\n      <pre class="language-java"><code class="language-java">            <span class="token comment">/// Draw Objects</span>\n            <span class="token function">draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n      </div>\n<h1>The Game Loop</h1>\n<p>A game loop in our case is one function (the update function) which will be called over and over again, forcing our game to update as if real-time events are occurring, I accomplished this using the setInterval function (JavaScripters will likely recognize this one), it essentially calls our update every 30 milliseconds. </p>\n<p>We then call it inside our init function (after we have drawn our objects). </p>\n<div class="gatsby-highlight" data-language="java">\n      <pre class="language-java"><code class="language-java">           <span class="token comment">/// Enter Game Loop</span>\n            <span class="token function">setInterval</span><span class="token punctuation">(</span>update<span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n      </div>\n<h1>Moving The Bird</h1>\n<p>Inside our update function, we can begin handling the bird\'s position. The first set of instructions handle are bird\'s "flap" mechanic (though this won\'t actually work yet - but it will when we implement our input code). After this, we check if the bird fell off the screen and move it back to the top if so (optional). I suggest you play around with these variables to get a feel for what each one of them does. </p>\n<div class="gatsby-highlight" data-language="java">\n      <pre class="language-java"><code class="language-java">            <span class="token comment">/// Handle Bird\'s / Player\'s Positiong</span>\n            playerVelocity <span class="token operator">+=</span> playerGravity<span class="token punctuation">;</span>\n            playerVelocity <span class="token operator">*=</span> <span class="token number">0.9</span><span class="token punctuation">;</span>\n            bird<span class="token punctuation">.</span>y <span class="token operator">+=</span> playerVelocity<span class="token punctuation">;</span>\n       \n            <span class="token keyword">if</span> <span class="token punctuation">(</span>bird<span class="token punctuation">.</span>y <span class="token operator">>=</span> <span class="token number">480</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// 480 = bottom of game-area</span>\n                bird<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n                playerVelocity <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span></code></pre>\n      </div>\n<p>Now we will make the bird "flap" each time the up arrow key is pressed, this is the code that will do that. </p>\n<div class="gatsby-highlight" data-language="java">\n      <pre class="language-java"><code class="language-java">        <span class="token comment">/// Movement</span>\n        <span class="token keyword">public</span> function <span class="token function">move</span><span class="token punctuation">(</span>e<span class="token operator">:</span>KeyboardEvent<span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">void</span> <span class="token punctuation">{</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>keyCode <span class="token operator">==</span> <span class="token number">38</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// 38 = up arrow key</span>\n                playerVelocity <span class="token operator">-=</span> playerThrust<span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span></code></pre>\n      </div>\n<p>Though this method will never get called unless we add an event-handler - a special function which automatically detects the input for us and calls a function of our choosing when the type of input it expects occurs, obviously we will call our move function. This code goes inside our "init" function. </p>\n<div class="gatsby-highlight" data-language="java">\n      <pre class="language-java"><code class="language-java">            <span class="token comment">// entry point</span>\n            stage<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span>KeyboardEvent<span class="token punctuation">.</span>KEY_DOWN<span class="token punctuation">,</span> move<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n      </div>\n<h1>Pipes</h1>\n<p>We should now be able to see the bird flap, We will move the pipes towards the left of the screen, check for a collision (if two objects are touching) between the pipe and the bird, and if there was no collision we will increase the bird\'s score. We will also adjust our object\'s positioning approrpiately. </p>\n<div class="gatsby-highlight" data-language="java">\n      <pre class="language-java"><code class="language-java">            <span class="token comment">/// Move Pipes</span>\n            pipe1<span class="token punctuation">.</span>x <span class="token operator">-=</span> <span class="token number">2.4</span><span class="token punctuation">;</span>\n            pipe2<span class="token punctuation">.</span>x <span class="token operator">-=</span> <span class="token number">2.4</span><span class="token punctuation">;</span>\n            \n\t<span class="token comment">/// Player Successfully Avoided Pipes</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>pipe1<span class="token punctuation">.</span>x <span class="token operator">&lt;=</span> <span class="token operator">-</span><span class="token number">650</span> <span class="token operator">||</span> pipe2<span class="token punctuation">.</span>x <span class="token operator">&lt;=</span> <span class="token operator">-</span><span class="token number">650</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// -650 = left side of game-area</span>\n                pipe1<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">270</span><span class="token punctuation">;</span> <span class="token comment">// 270 = right side of game-area  </span>\n                pipe2<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">270</span><span class="token punctuation">;</span>\n                score <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n           \n            <span class="token comment">/// Collision Detection</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>bird<span class="token punctuation">.</span><span class="token function">getBounds</span><span class="token punctuation">(</span>stage<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">intersects</span><span class="token punctuation">(</span>pipe1<span class="token punctuation">.</span><span class="token function">getBounds</span><span class="token punctuation">(</span>stage<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">||</span> bird<span class="token punctuation">.</span><span class="token function">getBounds</span><span class="token punctuation">(</span>stage<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">intersects</span><span class="token punctuation">(</span>pipe2<span class="token punctuation">.</span><span class="token function">getBounds</span><span class="token punctuation">(</span>stage<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">||</span> bird<span class="token punctuation">.</span>y <span class="token operator">>=</span> stage<span class="token punctuation">.</span>height <span class="token operator">-</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                bird<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span>\n                score <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n                pipe1<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">270</span><span class="token punctuation">;</span>\n                pipe2<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">270</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span></code></pre>\n      </div>\n<h1>Score</h1>\n<p>We have already implemented the scoring system, all we have to do now is make sure our score gets updated and is turned into a string so it can be displayed on the screen. </p>\n<div class="gatsby-highlight" data-language="java">\n      <pre class="language-java"><code class="language-java"><span class="token comment">/// Set (And Update) Score</span>\n            scoreText<span class="token punctuation">.</span>text <span class="token operator">=</span> score<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           </code></pre>\n      </div>\n<h1>Congratulations and Final Code</h1>\n<div class="gatsby-highlight" data-language="java">\n      <pre class="language-java"><code class="language-java"><span class="token keyword">package</span>\n<span class="token punctuation">{</span>\n    <span class="token keyword">import</span> flash<span class="token punctuation">.</span>display<span class="token punctuation">.</span>Sprite<span class="token punctuation">;</span>\n    <span class="token keyword">import</span> flash<span class="token punctuation">.</span>events<span class="token punctuation">.</span>Event<span class="token punctuation">;</span>\n    <span class="token keyword">import</span> flash<span class="token punctuation">.</span>display<span class="token punctuation">.</span>Shape<span class="token punctuation">;</span>\n    <span class="token keyword">import</span> flash<span class="token punctuation">.</span>events<span class="token punctuation">.</span>KeyboardEvent<span class="token punctuation">;</span>\n    <span class="token keyword">import</span> flash<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>setInterval<span class="token punctuation">;</span>\n    <span class="token keyword">import</span> flash<span class="token punctuation">.</span>text<span class="token punctuation">.</span>TextField<span class="token punctuation">;</span>\n    <span class="token keyword">import</span> flash<span class="token punctuation">.</span>text<span class="token punctuation">.</span>TextFormat<span class="token punctuation">;</span>\n   \n    <span class="token comment">/**\n     * //// Flappy Bird [Clone] (ActionScript/Flash)\n     * @author bh0\n     */</span>\n    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token keyword">extends</span> <span class="token class-name">Sprite</span>\n    <span class="token punctuation">{</span>\n        <span class="token comment">/// Player aka Bird</span>\n        <span class="token keyword">public</span> var playerSpeed<span class="token operator">:</span><span class="token keyword">int</span><span class="token punctuation">;</span>\n        <span class="token keyword">public</span> var playerGravity<span class="token operator">:</span>Number<span class="token punctuation">;</span>\n        <span class="token keyword">public</span> var playerVelocity<span class="token operator">:</span>Number<span class="token punctuation">;</span>\n        <span class="token keyword">public</span> var playerThrust<span class="token operator">:</span><span class="token keyword">int</span><span class="token punctuation">;</span>\n        <span class="token keyword">public</span> var score<span class="token operator">:</span><span class="token keyword">int</span><span class="token punctuation">;</span>\n        <span class="token keyword">public</span> var scoreText<span class="token operator">:</span>TextField<span class="token punctuation">;</span>\n       \n        <span class="token keyword">public</span> var bird<span class="token operator">:</span>Shape<span class="token punctuation">;</span>\n        <span class="token keyword">public</span> var pipe1<span class="token operator">:</span>Shape<span class="token punctuation">;</span>\n        <span class="token keyword">public</span> var pipe2<span class="token operator">:</span>Shape<span class="token punctuation">;</span>\n \n        <span class="token keyword">public</span> function <span class="token function">Main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token punctuation">{</span>\n            playerSpeed <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token comment">// player aka bird</span>\n            playerGravity <span class="token operator">=</span> <span class="token number">0.6</span><span class="token punctuation">;</span> <span class="token comment">// 0.6</span>\n            playerVelocity <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n            playerThrust <span class="token operator">=</span> <span class="token number">25</span><span class="token punctuation">;</span> <span class="token comment">// 20 15  </span>\n            score <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>stage<span class="token punctuation">)</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">else</span> <span class="token function">addEventListener</span><span class="token punctuation">(</span>Event<span class="token punctuation">.</span>ADDED_TO_STAGE<span class="token punctuation">,</span> init<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n       \n        <span class="token keyword">private</span> function <span class="token function">init</span><span class="token punctuation">(</span>e<span class="token operator">:</span>Event <span class="token operator">=</span> null<span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">void</span>\n        <span class="token punctuation">{</span>\n            <span class="token function">removeEventListener</span><span class="token punctuation">(</span>Event<span class="token punctuation">.</span>ADDED_TO_STAGE<span class="token punctuation">,</span> init<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token comment">// entry point</span>\n            stage<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span>KeyboardEvent<span class="token punctuation">.</span>KEY_DOWN<span class="token punctuation">,</span> move<span class="token punctuation">)</span><span class="token punctuation">;</span>\n           \n            <span class="token comment">/// Draw Objects</span>\n            <span class="token function">draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n           \n            <span class="token comment">/// Enter Game Loop</span>\n            <span class="token function">setInterval</span><span class="token punctuation">(</span>main<span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n       \n        <span class="token keyword">public</span> function <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">void</span> <span class="token punctuation">{</span>\n            <span class="token comment">/// Set (And Update) Score</span>\n            scoreText<span class="token punctuation">.</span>text <span class="token operator">=</span> score<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n               \n            <span class="token comment">/// Handle Bird\'s / Player\'s Positiong</span>\n            playerVelocity <span class="token operator">+=</span> playerGravity<span class="token punctuation">;</span>\n            playerVelocity <span class="token operator">*=</span> <span class="token number">0.9</span><span class="token punctuation">;</span>\n            bird<span class="token punctuation">.</span>y <span class="token operator">+=</span> playerVelocity<span class="token punctuation">;</span>\n       \n            <span class="token keyword">if</span> <span class="token punctuation">(</span>bird<span class="token punctuation">.</span>y <span class="token operator">>=</span> <span class="token number">480</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// 480 = bottom of game-area</span>\n                bird<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n                playerVelocity <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n \n            <span class="token comment">/// Move Pipes</span>\n            pipe1<span class="token punctuation">.</span>x <span class="token operator">-=</span> <span class="token number">2.4</span><span class="token punctuation">;</span>\n            pipe2<span class="token punctuation">.</span>x <span class="token operator">-=</span> <span class="token number">2.4</span><span class="token punctuation">;</span>\n           \n            <span class="token comment">/// Player Successfully Avoided Pipes</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>pipe1<span class="token punctuation">.</span>x <span class="token operator">&lt;=</span> <span class="token operator">-</span><span class="token number">650</span> <span class="token operator">||</span> pipe2<span class="token punctuation">.</span>x <span class="token operator">&lt;=</span> <span class="token operator">-</span><span class="token number">650</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// -650 = left side of game-area</span>\n                pipe1<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">270</span><span class="token punctuation">;</span> <span class="token comment">// 270 = right side of game-area  </span>\n                pipe2<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">270</span><span class="token punctuation">;</span>\n                score <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n           \n            <span class="token comment">/// Collision Detection</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>bird<span class="token punctuation">.</span><span class="token function">getBounds</span><span class="token punctuation">(</span>stage<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">intersects</span><span class="token punctuation">(</span>pipe1<span class="token punctuation">.</span><span class="token function">getBounds</span><span class="token punctuation">(</span>stage<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">||</span> bird<span class="token punctuation">.</span><span class="token function">getBounds</span><span class="token punctuation">(</span>stage<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">intersects</span><span class="token punctuation">(</span>pipe2<span class="token punctuation">.</span><span class="token function">getBounds</span><span class="token punctuation">(</span>stage<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">||</span> bird<span class="token punctuation">.</span>y <span class="token operator">>=</span> stage<span class="token punctuation">.</span>height <span class="token operator">-</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                bird<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span>\n                score <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n                pipe1<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">270</span><span class="token punctuation">;</span>\n                pipe2<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">270</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n       \n        <span class="token comment">/// Movement</span>\n        <span class="token keyword">public</span> function <span class="token function">move</span><span class="token punctuation">(</span>e<span class="token operator">:</span>KeyboardEvent<span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">void</span> <span class="token punctuation">{</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>keyCode <span class="token operator">==</span> <span class="token number">38</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// 38 = up arrow key</span>\n                playerVelocity <span class="token operator">-=</span> playerThrust<span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">public</span> function <span class="token function">draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">void</span> <span class="token punctuation">{</span>\n                       \n            <span class="token comment">/// Bird</span>\n            bird <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Shape</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            bird<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span><span class="token function">beginFill</span><span class="token punctuation">(</span><span class="token number">0X00FFFF00</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            bird<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span><span class="token function">drawRect</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            bird<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span><span class="token function">endFill</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token function">addChild</span><span class="token punctuation">(</span>bird<span class="token punctuation">)</span><span class="token punctuation">;</span>\n           \n            <span class="token comment">/// Score</span>\n            <span class="token comment">// var scoreTextFormat:TextFormat = new TextFormat();</span>\n            <span class="token comment">// scoreTextFormat.size = 130;</span>\n            scoreText <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TextField</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token comment">// scoreText.setTextFormat(scoreTextFormat);</span>\n            scoreText<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">400</span><span class="token punctuation">;</span>\n            scoreText<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span>\n            scoreText<span class="token punctuation">.</span>textColor <span class="token operator">=</span> <span class="token number">0X003E7091</span><span class="token punctuation">;</span>\n            <span class="token function">addChild</span><span class="token punctuation">(</span>scoreText<span class="token punctuation">)</span><span class="token punctuation">;</span>\n           \n            <span class="token comment">/// Pipe/s (Pipe1 &amp; Pipe2)</span>\n            pipe1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Shape</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            pipe1<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span><span class="token function">beginFill</span><span class="token punctuation">(</span><span class="token number">0X00FF00</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            pipe1<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span><span class="token function">drawRect</span><span class="token punctuation">(</span><span class="token number">600</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">160</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// h: 100, y: 200 or 170</span>\n            pipe1<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span><span class="token function">endFill</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token function">addChild</span><span class="token punctuation">(</span>pipe1<span class="token punctuation">)</span><span class="token punctuation">;</span>           \n \n            pipe2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Shape</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// these had to become independant for collision to work</span>\n            pipe2<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span><span class="token function">beginFill</span><span class="token punctuation">(</span><span class="token number">0X00FF00</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            pipe2<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span><span class="token function">drawRect</span><span class="token punctuation">(</span><span class="token number">600</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">160</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// h: 100, y: 200 or 170</span>\n            pipe2<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span><span class="token function">endFill</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token function">addChild</span><span class="token punctuation">(</span>pipe2<span class="token punctuation">)</span><span class="token punctuation">;</span>           \n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>  \n<span class="token punctuation">}</span> </code></pre>\n      </div>\n<h1>Improvements</h1>\n<p>Admittedly, I was not too sure Flash\'s coordinates system worked and were not sure about the dimensions of the stage (game-area/world), so this is something you can improve upon, perhaps using variables/properties to better represent such numbers. You could also make your code much more object-oriented and modular, I did attempt this but had issues rendering the objects, I intend on making a tutorial demonstrating how to use classes and instances in ActionScript (it is essentially the same as in Java) and hopefully at this point you can figure out how to solve/avoid the rendering issue/s I experienced. </p>\n<h1>Thanks For Reading</h1>\n<p>Flash and ActionScript are technologies that used to be commonly used by "indie" game developers to make popular web-games, and since I love game development, I have always wanted to make a game using Flash/ActionScript - so this is a present to myself [as it happens to be my birthday this time of the month, partly a reason why I did not fuss on minor details.], </p>',
frontmatter:{path:"/actionscript-flappy-bird-clone",title:"ActionScript Flappy BIrd Clone"}}},pathContext:{}}}});
//# sourceMappingURL=path---actionscript-flappy-bird-clone-55defcc6a9c58796611e.js.map